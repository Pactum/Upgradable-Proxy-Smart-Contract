{
  "contractName": "Registry",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "val",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "logic_contract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "val2",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "msg_sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerCalled",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_c",
          "type": "address"
        }
      ],
      "name": "setLogicContract",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103b7806100546000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633c6bb436146100cf5780634de94320146100fa5780635aa4470f146101515780638da5cb5b146101ac57806395cacbe014610203575b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e81600081146100c057600181146100c4576100c8565b8184fd5b8184f35b5050505050005b3480156100db57600080fd5b506100e461022e565b6040518082815260200191505060405180910390f35b34801561010657600080fd5b5061010f610234565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015d57600080fd5b50610192600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025a565b604051808215151515815260200191505060405180910390f35b3480156101b857600080fd5b506101c161035f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020f57600080fd5b50610218610385565b6040518082815260200191505060405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f8e0926ba3bf57bee594db1ba942d2d4f2b8f8fcfda47345cf855847dc8411bc433600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a181600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600154815600a165627a7a723058207d50e5ac6c3cd30b17a24928f62321416940fd4820e1c6e64122fb727a3148b40029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633c6bb436146100cf5780634de94320146100fa5780635aa4470f146101515780638da5cb5b146101ac57806395cacbe014610203575b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e81600081146100c057600181146100c4576100c8565b8184fd5b8184f35b5050505050005b3480156100db57600080fd5b506100e461022e565b6040518082815260200191505060405180910390f35b34801561010657600080fd5b5061010f610234565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015d57600080fd5b50610192600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061025a565b604051808215151515815260200191505060405180910390f35b3480156101b857600080fd5b506101c161035f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561020f57600080fd5b50610218610385565b6040518082815260200191505060405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f8e0926ba3bf57bee594db1ba942d2d4f2b8f8fcfda47345cf855847dc8411bc433600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a181600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600154815600a165627a7a723058207d50e5ac6c3cd30b17a24928f62321416940fd4820e1c6e64122fb727a3148b40029",
  "sourceMap": "199:1137:4:-;;;165:10:3;157:5;;:18;;;;;;;;;;;;;;;;;;199:1137:4;;;;;;",
  "deployedSourceMap": "199:1137:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:14;567;;;;;;;;;;;550:31;;702:4;696:11;741:12;738:1;733:3;720:34;915:1;912;898:12;893:3;885:6;880:3;867:50;1082:14;1132:4;1129:1;1124:3;1109:28;1229:6;1253:1;1248:28;;;;1294:1;1289:28;;;;1222:95;;1248:28;1269:4;1264:3;1257:17;1289:28;1310:4;1305:3;1298:17;1222:95;;601:726;;;;199:1137;50:15:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50:15:5;;;;;;;;;;;;;;;;;;;;;;;244:29:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;244:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;280:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;280:134:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48:20:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;72:16:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;72:16:5;;;;;;;;;;;;;;;;;;;;;;;50:15;;;;:::o;244:29:4:-;;;;;;;;;;;;;:::o;280:134::-;344:12;211:30:3;223:10;235:5;;;;;;;;;;;211:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;384:2:4;367:14;;:19;;;;;;;;;;;;;;;;;;403:4;396:11;;280:134;;;:::o;48:20:3:-;;;;;;;;;;;;;:::o;72:16:5:-;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport './Ownable.sol';\nimport './Storage.sol';\n\n// https://blog.indorse.io/ethereum-upgradeable-smart-contract-strategies-456350d0557c\n// entry contract for administrator\n\ncontract Registry is Storage, Ownable {\n\n    address public logic_contract;\n\n    function setLogicContract(address _c) public onlyOwner returns (bool success){\n        logic_contract = _c;\n        return true;\n    }\n\n    // proxy fall back is so that we can access all admin functions in the storage contract\n    function () payable public {\n\n        address target = logic_contract;\n\n        assembly {\n            // Copy the data sent to the memory address starting 0x40\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n\n            // Proxy the call to the contract address with the provided gas and data\n            let result := delegatecall(gas, target, ptr, calldatasize, 0, 0)\n\n            // Copy the data returned by the proxied call to memory\n            // http://solidity.readthedocs.io/en/v0.4.24/assembly.html\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n\n            // Check what the result is, return and revert accordingly\n            switch result\n            case 0 { revert(ptr, size) }\n            case 1 { return(ptr, size) }\n        }\n    }\n\n}\n",
  "sourcePath": "/Users/bernardpeh/upgradable_smart_contract/contracts/Registry.sol",
  "ast": {
    "absolutePath": "/Users/bernardpeh/upgradable_smart_contract/contracts/Registry.sol",
    "exportedSymbols": {
      "Registry": [
        182
      ]
    },
    "id": 183,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 148,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/bernardpeh/upgradable_smart_contract/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 149,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 147,
        "src": "26:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bernardpeh/upgradable_smart_contract/contracts/Storage.sol",
        "file": "./Storage.sol",
        "id": 150,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 190,
        "src": "50:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 151,
              "name": "Storage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 189,
              "src": "220:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storage_$189",
                "typeString": "contract Storage"
              }
            },
            "id": 152,
            "nodeType": "InheritanceSpecifier",
            "src": "220:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 153,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 146,
              "src": "229:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$146",
                "typeString": "contract Ownable"
              }
            },
            "id": 154,
            "nodeType": "InheritanceSpecifier",
            "src": "229:7:4"
          }
        ],
        "contractDependencies": [
          146,
          189
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 182,
        "linearizedBaseContracts": [
          182,
          146,
          189
        ],
        "name": "Registry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 156,
            "name": "logic_contract",
            "nodeType": "VariableDeclaration",
            "scope": 182,
            "src": "244:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 155,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "244:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "357:57:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "logic_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "367:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 166,
                      "name": "_c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "384:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "367:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "367:19:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "403:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 164,
                  "id": 170,
                  "nodeType": "Return",
                  "src": "396:11:4"
                }
              ]
            },
            "documentation": null,
            "id": 172,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 161,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 160,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 145,
                  "src": "325:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "325:9:4"
              }
            ],
            "name": "setLogicContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "_c",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "306:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:12:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "344:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "343:14:4"
            },
            "scope": 182,
            "src": "280:134:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "539:794:4",
              "statements": [
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "550:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "550:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 177,
                    "name": "logic_contract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "567:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "550:31:4"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 176,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "885:6:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 179,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "592:741:4"
                }
              ]
            },
            "documentation": null,
            "id": 181,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:4"
            },
            "scope": 182,
            "src": "512:821:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 183,
        "src": "199:1137:4"
      }
    ],
    "src": "0:1337:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/bernardpeh/upgradable_smart_contract/contracts/Registry.sol",
    "exportedSymbols": {
      "Registry": [
        182
      ]
    },
    "id": 183,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 148,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/Users/bernardpeh/upgradable_smart_contract/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 149,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 147,
        "src": "26:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bernardpeh/upgradable_smart_contract/contracts/Storage.sol",
        "file": "./Storage.sol",
        "id": 150,
        "nodeType": "ImportDirective",
        "scope": 183,
        "sourceUnit": 190,
        "src": "50:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 151,
              "name": "Storage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 189,
              "src": "220:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Storage_$189",
                "typeString": "contract Storage"
              }
            },
            "id": 152,
            "nodeType": "InheritanceSpecifier",
            "src": "220:7:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 153,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 146,
              "src": "229:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$146",
                "typeString": "contract Ownable"
              }
            },
            "id": 154,
            "nodeType": "InheritanceSpecifier",
            "src": "229:7:4"
          }
        ],
        "contractDependencies": [
          146,
          189
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 182,
        "linearizedBaseContracts": [
          182,
          146,
          189
        ],
        "name": "Registry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 156,
            "name": "logic_contract",
            "nodeType": "VariableDeclaration",
            "scope": 182,
            "src": "244:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 155,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "244:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "357:57:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "logic_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "367:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 166,
                      "name": "_c",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "384:2:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "367:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "367:19:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "403:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 164,
                  "id": 170,
                  "nodeType": "Return",
                  "src": "396:11:4"
                }
              ]
            },
            "documentation": null,
            "id": 172,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 161,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 160,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 145,
                  "src": "325:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "325:9:4"
              }
            ],
            "name": "setLogicContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "_c",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "306:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "306:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:12:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "344:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "343:14:4"
            },
            "scope": 182,
            "src": "280:134:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "539:794:4",
              "statements": [
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 181,
                      "src": "550:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "550:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 177,
                    "name": "logic_contract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 156,
                    "src": "567:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "550:31:4"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 176,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "885:6:4",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 179,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "592:741:4"
                }
              ]
            },
            "documentation": null,
            "id": 181,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "521:2:4"
            },
            "payable": true,
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:4"
            },
            "scope": 182,
            "src": "512:821:4",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 183,
        "src": "199:1137:4"
      }
    ],
    "src": "0:1337:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0x4e59fb9324237c4af776bbe8feedbe7c6c2aa1d4",
      "transactionHash": "0x72238be7d2b4e0ce665a5759356893ff4a1bacd9e5cd319354143b226b7ebf71"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-05-20T11:50:40.577Z"
}